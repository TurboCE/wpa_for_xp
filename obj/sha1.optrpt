
Begin optimization report for: sha1_update(SHA1_CTX *, const BYTE *, size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/sha1.c(97,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at src/sha1.c(27,2) inlined into src/sha1.c(101,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between m line 29 and m line 28
   LOOP END

   LOOP BEGIN at src/sha1.c(38,2) inlined into src/sha1.c(101,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between a line 44 and a line 39
   LOOP END

   LOOP BEGIN at src/sha1.c(46,2) inlined into src/sha1.c(101,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between a line 52 and a line 47
   LOOP END

   LOOP BEGIN at src/sha1.c(46,2) inlined into src/sha1.c(101,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at src/sha1.c(54,2) inlined into src/sha1.c(101,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between a line 60 and a line 55
   LOOP END

   LOOP BEGIN at src/sha1.c(54,2) inlined into src/sha1.c(101,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at src/sha1.c(62,2) inlined into src/sha1.c(101,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between a line 68 and a line 63
   LOOP END

   LOOP BEGIN at src/sha1.c(62,2) inlined into src/sha1.c(101,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at src/sha1.c(25,2) inlined into src/sha1.c(101,4)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: sha1_final(SHA1_CTX *, BYTE *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/sha1.c(117,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/sha1.c(117,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at src/sha1.c(117,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at src/sha1.c(122,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/sha1.c(122,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at src/sha1.c(122,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at src/sha1.c(142,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between hash line 143 and ctx line 147
LOOP END
===========================================================================

Begin optimization report for: sha1_transform(SHA1_CTX *, const BYTE *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/sha1.c(25,2)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at src/sha1.c(27,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between m line 29 and m line 28
LOOP END

LOOP BEGIN at src/sha1.c(38,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between a line 44 and a line 39
LOOP END

LOOP BEGIN at src/sha1.c(46,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between a line 52 and a line 47
LOOP END

LOOP BEGIN at src/sha1.c(46,2)
<Remainder>
LOOP END

LOOP BEGIN at src/sha1.c(54,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between a line 60 and a line 55
LOOP END

LOOP BEGIN at src/sha1.c(54,2)
<Remainder>
LOOP END

LOOP BEGIN at src/sha1.c(62,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between a line 68 and a line 63
LOOP END

LOOP BEGIN at src/sha1.c(62,2)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: sha1_init(SHA1_CTX *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/sha1.c(82,2)
   remark #15301: BLOCK WAS VECTORIZED
LOOP END

LOOP BEGIN at src/sha1.c(82,2)
<Remainder>
LOOP END

LOOP BEGIN at src/sha1.c(87,2)
   remark #15301: BLOCK WAS VECTORIZED
LOOP END
===========================================================================
